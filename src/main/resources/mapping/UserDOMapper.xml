<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jkcj.dao.UserDOMapper">
  <resultMap id="BaseResultMap" type="com.jkcj.DO.UserDO">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created_at" jdbcType="DATE" property="createdAt" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, username, password, role_id, status, created_at,tel
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="userLogin" parameterType="java.lang.String" resultType="com.jkcj.DO.UserDO">
    select * from user where username = #{username,jdbcType=VARCHAR}
  </select>
  <insert id="userAdd" >
    insert into user(username, password, role_id, tel)
    values (#{username,jdbcType=CHAR}, #{password,jdbcType=CHAR}, 1, #{tel,jdbcType=VARCHAR})
  </insert>
  <select id="getUserInfo" parameterType="java.lang.Integer" resultType="com.jkcj.VO.UserVO">
    select  u.uid, u.username, r.title, u.status, u.created_at,u.tel
    from user u inner join role r
    on u.role_id = r.role_id
    where u.uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="getUserList" resultType="com.jkcj.VO.UserVO">
    select  u.uid, u.username, r.title, u.status, u.created_at,u.tel
    from user u inner join role r
    on u.role_id = r.role_id
  </select>
  <update id="banUser" parameterType="java.lang.Integer">
    update user
    set status = #{status,jdbcType=INTEGER}
    where uid = #{uid ,jdbcType=INTEGER}
  </update>
  <update id="updateUser">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid ,jdbcType=INTEGER}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jkcj.DO.UserDO">
    insert into user (uid, username, password, 
      role_id, status, created_at
      )
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=CHAR}, #{password,jdbcType=CHAR}, 
      #{roleId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createdAt,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jkcj.DO.UserDO">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jkcj.DO.UserDO">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jkcj.DO.UserDO">
    update user
    set username = #{username,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>